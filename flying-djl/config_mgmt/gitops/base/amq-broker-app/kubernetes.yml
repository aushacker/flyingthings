# Reference:
#   https://artemiscloud.io/

---
apiVersion: v1
kind: Service
metadata:
  name: mqtt-lb
  namespace: user1-flying-djl
spec:
  type: LoadBalancer 
  externalTrafficPolicy: Local
  ports:
    - port: 1883
      targetPort: 1883
      protocol: TCP
      name: mqtt
  selector:
    ActiveMQArtemis: artemis
    application: artemis-app
    statefulset.kubernetes.io/pod-name: artemis-ss-0
---
apiVersion: broker.amq.io/v1beta1
kind: ActiveMQArtemis
metadata:
  name: artemis
  namespace: user1-flying-djl
spec:
  console:
    expose: true
  acceptors:
    - name: mqtt
      port: 1883
      protocols: mqtt

    # https://artemiscloud.io/docs/tutorials/external_mqtt_clients/
    - name: mqtt-tls
      port: 1884     # de-conflict port with default mqtt address
      protocols: mqtt
      expose: true
      sslEnabled: true
      sslSecret: artemis-tls-secret

    - name: amqp
      port: 5672
      protocols: amqp
  env:
    - name: JAVA_ARGS_APPEND
      value: -Djavax.net.debug=all
  adminPassword: admin
  adminUser: admin
  deploymentPlan:
    image: placeholder
    jolokiaAgentEnabled: false
    journalType: nio
    managementRBACEnabled: true
    messageMigration: false
    persistenceEnabled: false
    requireLogin: false
    size: 1
---
apiVersion: broker.amq.io/v1beta1
kind: ActiveMQArtemisAddress
metadata:
  name: live-object-detection
spec:
  addressName: liveObjectDetection

  # MQTT is a multicast topic
  routingType: multicast

  removeFromBrokerOnDelete: true
---
apiVersion: broker.amq.io/v1beta1
kind: ActiveMQArtemisAddress
metadata:
  name: model-update-notify
spec:
  addressName: model-update-notify

  # MQTT is a multicast topic
  routingType: multicast

  removeFromBrokerOnDelete: true
